//This code is Written by Rishabh Sharma

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    ListNode curr;

    public void reorderList(ListNode head) {
        if (head == null || head.next == null || head.next.next == null) {
            return; // Base case: empty list or list with 1 or 2 nodes
        }

        curr = head;
        solve(head);
    }

    void solve(ListNode head) {
        if (head == null) {
            return;
        }

        solve(head.next);

        ListNode temp = curr.next;
        if (curr.next == null) {
            return;
        } else if (head == curr) {
            head.next = null;
            return;
        }
        curr.next = head;
        head.next = (temp == head) ? null : temp;

        curr = temp;
    }
}
