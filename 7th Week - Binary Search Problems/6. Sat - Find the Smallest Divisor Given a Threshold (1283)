//This code is Written by Rishabh Sharma

import java.util.Arrays;

class Solution {

    public int sum(int[] nums, int div){
        int sum = 0;
        int n = nums.length;
        for(int i=0; i<n; i++){
            sum += Math.ceil((double)(nums[i]) / (double)(div));
        }
        return sum;
    } 

    public int smallestDivisor(int[] nums, int threshold) {
        int low = 1;
        int high = Arrays.stream(nums).max().getAsInt();

        while(low <= high){
            int mid = (low + high) / 2;
            if(sum(nums, mid) <= threshold){
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return low;
    }
}
